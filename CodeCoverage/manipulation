import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class ManipulationTest {

    private static final String FILE_PATH = "inventory_test.csv";

    @BeforeEach
    public void setup(){
        File file = new File(FILE_PATH);
        file.delete();
    }

    @Test
    public void testAdd() throws IOException {
        List<String[]> products = manipulation.add(FILE_PATH, stubHeadings(), "ABC", "100", "8", "10", "test");
        Assertions.assertNotNull(products);
        Assertions.assertEquals(2, products.size());
        Assertions.assertEquals(products.get(1)[0], "ABC");
        Assertions.assertEquals(products.get(1)[1], "100");
        Assertions.assertEquals(products.get(1)[2], "8");
        Assertions.assertEquals(products.get(1)[3], "10");
        Assertions.assertEquals(products.get(1)[4], "test");
    }

    @Test
    public void testSearch(){
        String[] product = manipulation.search(stubData(), "ABC");
        Assertions.assertNotNull(product);
        Assertions.assertEquals(product[0], "ABC");
        Assertions.assertEquals(product[1], "100");
        Assertions.assertEquals(product[2], "8");
        Assertions.assertEquals(product[3], "10");
        Assertions.assertEquals(product[4], "test");
    }

    @Test
    public void testUpdate_quantity(){
        List<String[]> products = manipulation.update(stubData(), "ABC", "quantity", "100");
        Assertions.assertEquals(products.get(1)[1], "100");
    }

    @Test
    public void testUpdate_wholesale_cost(){
        List<String[]> products = manipulation.update(stubData(), "ABC", "wholesale_cost", "10");
        Assertions.assertEquals(products.get(1)[2], "10");
    }

    @Test
    public void testUpdate_sale_price(){
        List<String[]> products = manipulation.update(stubData(), "ABC", "sale_price", "12");
        Assertions.assertEquals(products.get(1)[3], "12");
    }

    @Test
    public void testUpdate_supplier_id(){
        List<String[]> products = manipulation.update(stubData(), "ABC", "supplier_id", "testing");
        Assertions.assertEquals(products.get(1)[4], "testing");
    }

    @Test
    public void testUpdateAll(){
        List<String[]> products = manipulation.updateall(stubData(), "ABC", "120", "8", "10", "testing");
        Assertions.assertNotNull(products);
        Assertions.assertEquals(2, products.size());
        Assertions.assertEquals(products.get(1)[0], "ABC");
        Assertions.assertEquals(products.get(1)[1], "120");
        Assertions.assertEquals(products.get(1)[2], "8");
        Assertions.assertEquals(products.get(1)[3], "10");
        Assertions.assertEquals(products.get(1)[4], "testing");
    }

    @Test
    public void testDelete() throws IOException {
        List<String[]> products = manipulation.delete(stubData(), "ABC");
        Assertions.assertNotNull(products);
        Assertions.assertEquals(1, products.size());
    }

    private List<String[]> stubHeadings(){
        List<String[]> data = new ArrayList<>();
        data.add(stubHeading());
        return data;
    }

    private List<String[]> stubData(){
        List<String[]> data = new ArrayList<>();
        String[] product = {
            "ABC",
            "100",
            "8",
            "10",
            "test"
        };
        data.add(stubHeading());
        data.add(product);
        return data;
    }

    private String[] stubHeading(){
        return new String[]{
            "product_id",
            "quantity",
            "wholesale_cost",
            "sale_price",
            "supplier_id"
        };
    }

}
